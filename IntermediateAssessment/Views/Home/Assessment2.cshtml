@model IntermediateAssessment.Storage.Exercise

@{
    ViewBag.Title = Model.Assessment.Name;
}

<h1>@Model.Assessment.Name</h1>

<h2>Студент</h2>
<table class="table-bordered col-md-6">
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.FirstName)</td>
        <td class="col-4">@Html.DisplayFor(model => model.Student.FirstName)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.LastName)</td>
        <td class="col-2">@Html.DisplayFor(model => model.Student.LastName)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.GroupHtml)</td>
        <td class="col-4">@Html.Raw(Model.Student.GroupHtml)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.FileNumber)</td>
        <td class="col-4">@Html.DisplayFor(model => model.Student.FileNumber)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.StartTime)</td>
        <td class="col-4">@Html.DisplayFor(model => model.StartTime)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">Время окончания приёма задания</td>
        <td class="col-4">@ViewBag.FinishTime</td>
    </tr>
</table>

<h2>Задание № 1</h2>
<p>Вы успешно окончили МГТУ им. Н. Э. Баумана. Вы начинаете работать в небольшой компании – производителе ПО. Управление проектами в компании осуществляется по принципам гибкой разработки (Agile). Руководитель проекта хочет оценить, насколько вы понимаете ценности Agile</p>
<ol>
    <li>Люди и взаимодействие важнее процессов и инструментов</li>
    <li>Работающий продукт важнее исчерпывающей документации</li>
    <li>Сотрудничество с клиентом важнее согласования условий контракта</li>
    <li>Готовность к изменениям важнее следования первоначальному плану</li>
</ol>
<p>Укажите, к каким ценностям Agile относятся принципы Agile, приведенные ниже. Указать № ценности.</p>

@using (Html.BeginForm("Assessment2", "Home", FormMethod.Post))
{
    @Html.Hidden("id", Model.ID)
    @Html.Hidden("answer", null)

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Exercises3.First().Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises3.First().Principle.Name)
            </th>
            <th>
                №&nbsp;ценности&nbsp;Agile
            </th>
        </tr>
        @foreach (var e3 in Model.Exercises3.OrderBy(e => e.Number))
        {
            <tr>
                <td>@e3.Number</td>
                <td>@e3.Principle.Name</td>
                <td>
                    <input class="input-validation-error" id="answer" name="answer" type="text" value="@e3.AnswerNumber" />
                    <div class="text-danger">@e3.AnswerNumberMessage</div>
                </td>
            </tr>
        }
    </table>
    <h2>Задание № 2</h2>
    <p>
        Ниже приведен код, который реализует WCF-сервис.
        Исправить возможные ошибки в коде.
    </p>
    <hr />
    <table class="table-borderless" style="table-layout: fixed; word-wrap: break-word;">
        <tr>
            <th style="width: 50%">Код</th>
            <th style="width: 50%">Исправление</th>
        </tr>
        @foreach (var item in Model.Exercises2.OrderBy(x => x.CodeRow.Row))
        {   
    <tr>
        <td class="text-monospace" style="width: 50%">
            @Html.Raw(item.ToString())
        </td>
        <td class="text-monospace" style="width: 50%">
            <input class="input-validation-error" style="width:900px" id="code" name="code" type="text" value="@item.AnswerString" />
        </td>
    </tr>
        }
    </table>
    <p>
        При необходимости можно дать дополнительные пояснения.
    </p>
    <textarea class="input-validation-error col-md-12" rows="10" id="text" name="text" type="text">
    @Model.Answer
    </textarea>

    <input type="submit" value="Отправить результат на проверку" class="btn btn-info col-md-12" />
}
